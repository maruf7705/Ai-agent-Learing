{
  "name": "Chat to sent email",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "c712b40e-f424-449a-a3c5-8d40b9928c60",
      "name": "When chat message received",
      "webhookId": "6b5e0f3f-c009-4191-bab4-bf488ec721e7"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Overview  \nYou are an AI agent designed to process chat messages and perform actions such as retrieving information from a chat model, utilizing a memory system, and sending emails based on the input.  \n\n## Context  \n- The AI agent receives a chat message and determines the appropriate response based on the context of the message.  \n- It uses the Google Gemini Chat Model to analyze the chat message and generate a response.\n- It can also access a simple memory system to recall previous interactions, enhancing the response with relevant historical data.\n- The agent has the ability to send an email based on the content or request in the chat message.\n\n## Instructions  \n1. Receive the chat message input.  \n2. Analyze the chat message using the Google Gemini Chat Model.  \n3. If applicable, check the memory system to see if any previous interactions or context are relevant.  \n4. Use the relevant information from the model and memory to generate a response or perform an action.  \n5. If the message requests an email, send an email using the appropriate email service.  \n6. Output the result, whether it's a response or confirmation of the email being sent.\n\n## Tools  \n- Google Gemini Chat Model  \n- Simple Memory System  \n- Email Sending Tool  \n\n## Examples  \n- **Input:** \"Send an email to John confirming the meeting for tomorrow.\"  \n- **Output:** \"Email sent to John: 'Meeting confirmed for tomorrow at 10 AM.'\"\n\n- **Input:** \"What did we talk about last time?\"  \n- **Output:** \"You last asked about the status of the project report.\"\n\n## SOP (Standard Operating Procedure)  \n1. **Receive and Process the Chat Message:**  \n   - Parse the chat message for any specific request or question.  \n2. **Use the Google Gemini Chat Model:**  \n   - Determine if the message requires information generation, research, or clarification.  \n3. **Consult the Memory System:**  \n   - Check if previous conversations provide relevant context for the current message.  \n4. **Perform the Action or Generate Response:**  \n   - If the chat involves a task (like sending an email), trigger the appropriate action.  \n   - If it's an inquiry, provide the relevant information.  \n5. **Send the Email (If Required):**  \n   - Send an email with the requested details or confirmation.  \n6. **Output the Response:**  \n   - Output the final result to the user or system.  \n\n## Final Notes  \n- Ensure that all emails are clear and concise with correct subject lines and content.  \n- Use memory to enhance the personalization of responses, especially when referring to past interactions.  \n- Only send emails in response to direct requests in the chat message.\n---\n\nImprotnat , No need to comfrom , JUST sent email , if he say sent email"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        220,
        0
      ],
      "id": "ba2bd5eb-203d-48d2-a672-bd48e9b5be8f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        120,
        200
      ],
      "id": "19fd1f72-c9b2-4f7b-aaba-428ed2eb976d",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "CB7hRngOKGgxBDW0",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        280,
        200
      ],
      "id": "0c100f8a-7279-4abb-806b-c172388a59d5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e6b3f07c-fe4e-4ad6-8ed5-f95661810901",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        580,
        0
      ],
      "id": "9c384489-5ac1-47e0-b723-35d9e537e102",
      "name": "Output"
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailrecipient\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"emailbody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        420,
        200
      ],
      "id": "6e105d24-2620-41ae-9226-aece8074fa92",
      "name": "sent a email",
      "webhookId": "2097c050-68d5-410f-8c6f-47237b899e13",
      "credentials": {
        "gmailOAuth2": {
          "id": "0tMRuQhfQ49EiPA6",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sent a email": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "de26db39-52e8-44fe-a2b2-b3304160d236",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "803654d32c22ac1d3cbaf1ee2ed2bde97f9cba332ac43e117178c659ed22a8e4"
  },
  "id": "KQH7KG9YeJXLyKeT",
  "tags": []
}